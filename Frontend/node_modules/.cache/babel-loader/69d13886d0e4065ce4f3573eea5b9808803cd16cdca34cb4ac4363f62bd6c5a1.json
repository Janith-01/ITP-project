{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\ITP 2\\\\ITP-project\\\\Frontend\\\\src\\\\Components\\\\AddVehicle\\\\AddVehicle.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../AddVehicle/AddVehicle.css';\r\nimport VehicleNav from '../VehicleNav/VehicleNav';\r\n\r\nfunction AddVehicle() {\r\n    const history = useNavigate();\r\n    const [inputs, setInputs] = useState({\r\n        vin: \"\",\r\n        regNo: \"\",\r\n        make: \"\",\r\n        model: \"\",\r\n        year: \"\",\r\n        ownerName: \"\",\r\n        ownerNic: \"\",\r\n        ownerEmail: \"\",\r\n        ownerAddress: \"\",\r\n        contactNo: \"\",\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      let updatedValue = value;\r\n      let errorMessage = '';\r\n\r\n      if (name === 'vin' || name === 'regNo') {\r\n          // Validate VIN and RegNo for symbols other than numbers and letters\r\n          if (/[^a-zA-Z0-9\\s-]/.test(value)) {\r\n              errorMessage = `${name === 'vin' ? 'VIN' : 'Registration Number'} can only contain numbers, letters, spaces, and '-'`;\r\n              updatedValue = value.replace(/[^a-zA-Z0-9\\s-]/g, '');\r\n          }\r\n      }\r\n\r\n      setInputs(prevState => ({\r\n          ...prevState,\r\n          [name]: updatedValue,\r\n      }));\r\n\r\n      setErrors(prevErrors => ({\r\n          ...prevErrors,\r\n          [name]: errorMessage,\r\n      }));\r\n  };\r\n\r\n    \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const validationErrors = validate(inputs);\r\n        if (Object.keys(validationErrors).length === 0) {\r\n            console.log(inputs);\r\n            sendRequest().then(() => history('/vehicledetails'));\r\n        } else {\r\n            setErrors(validationErrors);\r\n        }\r\n    };\r\n\r\n    const validate = (values) => {\r\n        let errors = {};\r\n\r\n        // validation rules\r\n        if (!values.vin.trim()) {\r\n            errors.vin = \"VIN is required\";\r\n        }\r\n        if (!values.regNo.trim()) {\r\n            errors.regNo = \"Registration Number is required\";\r\n        }\r\n        if (!values.make.trim()) {\r\n          errors.make = \"Make is required\";\r\n        }\r\n        if (!values.model.trim()) {\r\n          errors.model = \"Model is required\";\r\n        }\r\n        if (!values.year.trim()) {\r\n          errors.year = \"Year is required\";\r\n        }\r\n        if (!values.ownerName.trim()) {\r\n          errors.ownerName = \"Owner Name is required\";\r\n        }\r\n        if (!values.ownerNic.trim()) {\r\n          errors.ownerNic = \"Owner NIC is required\";\r\n        }\r\n        if (!values.ownerEmail.trim()) {\r\n          errors.ownerEmail = \"Owner Email is required\";\r\n        }\r\n        if (!values.ownerAddress.trim()) {\r\n          errors.ownerAddress = \"Owner Address is required\";\r\n        }\r\n        if (!values.contactNo.trim()) {\r\n          errors.contactNo = \"Contact Number is required\";\r\n        }\r\n        \r\n        return errors;\r\n    };\r\n\r\n    const sendRequest = async () => {\r\n        await axios.post(\"http://localhost:8083/vehicles\", {\r\n            vin: String(inputs.vin),\r\n            regNo: String(inputs.regNo),\r\n            make: String(inputs.make),\r\n            model: String(inputs.model),\r\n            year: Number(inputs.year),\r\n            ownerName: String(inputs.ownerName),\r\n            ownerNic: Number(inputs.ownerNic),\r\n            ownerEmail: String(inputs.ownerEmail),\r\n            ownerAddress: String(inputs.ownerAddress),\r\n            contactNo: Number(inputs.contactNo),\r\n        }).then(res => res.data);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className='bg1-background'>\r\n            <VehicleNav />\r\n            <h1><center>Add Vehicle</center></h1>\r\n            <form className='addVehicle' onSubmit={handleSubmit}>\r\n                <div className='inputGroup'>\r\n                <label>Vehicle Identification Number(VIN)</label>\r\n                <input type=\"text\" pattern=\"[a-zA-Z0-9]{17}\" title='Enter 17 characters only. Space not Allowd' name=\"vin\" onChange={handleChange} value={inputs.vin} required></input>\r\n                {errors.vin && <span style={{ color: 'red' }}>{errors.vin}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Registration Number</label>\r\n                <input type=\"text\" pattern=\"[a-zA-Z0-9- ]{7}\" title='Enter 7 characters only.' name=\"regNo\" onChange={handleChange} value={inputs.regNo} required></input>\r\n                {errors.regNo && <span style={{ color: 'red' }}>{errors.regNo}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Make</label>\r\n                <input type=\"text\" pattern=\"[a-zA-Z ]+\" title='Numbers not Allowd' name=\"make\" onChange={handleChange} value={inputs.make} required></input>\r\n                {errors.make && <span style={{ color: 'red' }}>{errors.make}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Model</label>\r\n                <input type=\"text\" pattern=\"^[a-zA-Z][a-zA-Z0-9-_.]{5,12}$\" name=\"model\" onChange={handleChange} value={inputs.model} required></input>\r\n                {errors.model && <span style={{ color: 'red' }}>{errors.model}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Year</label>\r\n                <input type=\"text\"  pattern=\"[0-9]{4}\" title='Letters not Allowd' name=\"year\" onChange={handleChange} value={inputs.year} required></input>\r\n                {errors.year && <span style={{ color: 'red' }}>{errors.year}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Owner Name</label>\r\n                <br />\r\n                <input type=\"text\" pattern=\"[a-zA-Z ]+\" title='Numbers not Allowd' name=\"ownerName\" onChange={handleChange} value={inputs.ownerName} required></input>\r\n                {errors.ownerName && <span style={{ color: 'red' }}>{errors.ownerName}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Owner NIC</label>\r\n                <input type=\"text\" pattern=\"[0-9]{12}\" title='Letters not Allowd' name=\"ownerNic\" onChange={handleChange} value={inputs.ownerNic} required></input>\r\n                {errors.ownerNic && <span style={{ color: 'red' }}>{errors.ownerNic}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Owner Email</label>\r\n                <input type=\"email\" pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" title='Enter valid Email.' name=\"ownerEmail\" onChange={handleChange} value={inputs.ownerEmail} required></input>\r\n                {errors.ownerEmail && <span style={{ color: 'red' }}>{errors.ownerEmail}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Owner Address</label>\r\n                <input type=\"text\" pattern=\"[a-zA-Z0-9-, ]+\" name=\"ownerAddress\" onChange={handleChange} value={inputs.ownerAddress} required></input>\r\n                {errors.ownerAddress && <span style={{ color: 'red' }}>{errors.ownerAddress}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Contact Number</label>\r\n                <input type=\"text\"  name=\"contactNo\" onChange={handleChange} value={inputs.contactNo} required></input>\r\n                {errors.contactNo && <span style={{ color: 'red' }}>{errors.contactNo}</span>}\r\n                </div>\r\n\r\n                <div className='sButton'>\r\n                <button>Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddVehicle;*/\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../AddVehicle/AddVehicle.css';\nimport VehicleNav from '../VehicleNav/VehicleNav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddVehicle() {\n  _s();\n  const history = useNavigate();\n  const [inputs, setInputs] = useState({\n    vin: \"\",\n    regNo: \"\",\n    make: \"\",\n    model: \"\",\n    year: \"\",\n    ownerName: \"\",\n    ownerNic: \"\",\n    ownerEmail: \"\",\n    ownerAddress: \"\",\n    contactNo: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let updatedValue = value;\n    let errorMessage = '';\n    if (name === 'vin' || name === 'regNo') {\n      // Validate VIN and RegNo for symbols other than numbers and letters\n      if (/[^a-zA-Z0-9\\s-]/.test(value)) {\n        errorMessage = `${name === 'vin' ? 'VIN' : 'Registration Number'} can only contain numbers, letters, spaces, and '-'`;\n        updatedValue = value.replace(/[^a-zA-Z0-9\\s-]/g, '');\n      }\n    } else if (name === 'ownerNic') {\n      // Validate NIC for numbers and 'V' only, length 10 or 12\n      if (/[^0-9V]/.test(value) || /\\s/.test(value) || !(value.length === 10 || value.length === 12)) {\n        errorMessage = \"NIC can only contain numbers and 'V', and no spaces are allowed. Length should be 10 or 12 characters.\";\n        updatedValue = value.replace(/[^0-9V]/g, '').slice(0, 12);\n      }\n    } else if (name === 'ownerEmail') {\n      // Validate email for spaces, '@', and '.'\n      if (/\\s/.test(value)) {\n        errorMessage = \"Email cannot contain spaces.\";\n      } else if (!/@/.test(value) || !/\\./.test(value)) {\n        errorMessage = \"Email must contain '@' and '.'.\";\n      }\n    }\n    setInputs(prevState => ({\n      ...prevState,\n      [name]: updatedValue\n    }));\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: errorMessage\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const validationErrors = validate(inputs);\n    if (Object.keys(validationErrors).length === 0) {\n      console.log(inputs);\n      sendRequest().then(() => history('/vehicledetails'));\n    } else {\n      setErrors(validationErrors);\n    }\n  };\n  const validate = values => {\n    let errors = {};\n\n    // validation rules\n    if (!values.vin.trim()) {\n      errors.vin = \"VIN is required\";\n    }\n    if (!values.regNo.trim()) {\n      errors.regNo = \"Registration Number is required\";\n    }\n    if (!values.make.trim()) {\n      errors.make = \"Make is required\";\n    }\n    if (!values.model.trim()) {\n      errors.model = \"Model is required\";\n    }\n    if (!values.year.trim()) {\n      errors.year = \"Year is required\";\n    }\n    if (!values.ownerName.trim()) {\n      errors.ownerName = \"Owner Name is required\";\n    }\n    if (!values.ownerNic.trim() || !(values.ownerNic.length === 10 || values.ownerNic.length === 12)) {\n      errors.ownerNic = \"Owner NIC is required and should be 10 or 12 characters long\";\n    }\n    if (!values.ownerEmail.trim()) {\n      errors.ownerEmail = \"Owner Email is required\";\n    }\n    if (!values.ownerAddress.trim()) {\n      errors.ownerAddress = \"Owner Address is required\";\n    }\n    if (!values.contactNo.trim()) {\n      errors.contactNo = \"Contact Number is required\";\n    }\n    return errors;\n  };\n  const sendRequest = async () => {\n    await axios.post(\"http://localhost:8083/vehicles\", {\n      vin: String(inputs.vin),\n      regNo: String(inputs.regNo),\n      make: String(inputs.make),\n      model: String(inputs.model),\n      year: Number(inputs.year),\n      ownerName: String(inputs.ownerName),\n      ownerNic: String(inputs.ownerNic),\n      ownerEmail: String(inputs.ownerEmail),\n      ownerAddress: String(inputs.ownerAddress),\n      contactNo: String(inputs.contactNo)\n    }).then(res => res.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg1-background\",\n    children: [/*#__PURE__*/_jsxDEV(VehicleNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: \"Add Vehicle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"addVehicle\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Vehicle Identification Number (VIN)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          pattern: \"[a-zA-Z0-9]{17}\",\n          title: \"Enter 17 characters only. Space not allowed\",\n          name: \"vin\",\n          onChange: handleChange,\n          value: inputs.vin,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), errors.vin && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.vin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Registration Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          pattern: \"[a-zA-Z0-9\\\\s-]{7}\",\n          title: \"Enter 7 characters only. Space and \\\"-\\\" allowed\",\n          name: \"regNo\",\n          onChange: handleChange,\n          value: inputs.regNo,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), errors.regNo && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.regNo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Make\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          pattern: \"[a-zA-Z ]+\",\n          title: \"Numbers not allowed\",\n          name: \"make\",\n          onChange: handleChange,\n          value: inputs.make,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this), errors.make && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.make\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-_.]{5,12}$\",\n          name: \"model\",\n          onChange: handleChange,\n          value: inputs.model,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }, this), errors.model && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.model\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          pattern: \"[0-9]{4}\",\n          title: \"Letters not allowed\",\n          name: \"year\",\n          onChange: handleChange,\n          value: inputs.year,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this), errors.year && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Owner Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          pattern: \"[a-zA-Z ]+\",\n          title: \"Numbers not allowed\",\n          name: \"ownerName\",\n          onChange: handleChange,\n          value: inputs.ownerName,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }, this), errors.ownerName && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.ownerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Owner NIC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          pattern: \"[0-9V]{10,12}\",\n          title: \"Enter 10 or 12 characters. Only numbers and capital \\\"V\\\" allowed.\",\n          name: \"ownerNic\",\n          onChange: handleChange,\n          value: inputs.ownerNic,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this), errors.ownerNic && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.ownerNic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Owner Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          title: \"Enter valid Email.\",\n          name: \"ownerEmail\",\n          onChange: handleChange,\n          value: inputs.ownerEmail,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this), errors.ownerEmail && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.ownerEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Owner Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          pattern: \"[a-zA-Z0-9-, ]+\",\n          name: \"ownerAddress\",\n          onChange: handleChange,\n          value: inputs.ownerAddress,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this), errors.ownerAddress && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.ownerAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Contact Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          pattern: \"[0-9]{10}\",\n          title: \"Enter valid contact number\",\n          name: \"contactNo\",\n          onChange: handleChange,\n          value: inputs.contactNo,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this), errors.contactNo && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.contactNo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 9\n  }, this);\n}\n_s(AddVehicle, \"zwi9MNOIvdZ+LPceROBYEQiVLdc=\", false, function () {\n  return [useNavigate];\n});\n_c = AddVehicle;\nexport default AddVehicle;\nvar _c;\n$RefreshReg$(_c, \"AddVehicle\");","map":{"version":3,"names":["React","useState","useNavigate","axios","VehicleNav","jsxDEV","_jsxDEV","AddVehicle","_s","history","inputs","setInputs","vin","regNo","make","model","year","ownerName","ownerNic","ownerEmail","ownerAddress","contactNo","errors","setErrors","handleChange","e","name","value","target","updatedValue","errorMessage","test","replace","length","slice","prevState","prevErrors","handleSubmit","preventDefault","validationErrors","validate","Object","keys","console","log","sendRequest","then","values","trim","post","String","Number","res","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","pattern","title","onChange","required","style","color","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/ITP 2/ITP-project/Frontend/src/Components/AddVehicle/AddVehicle.js"],"sourcesContent":["/*import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../AddVehicle/AddVehicle.css';\r\nimport VehicleNav from '../VehicleNav/VehicleNav';\r\n\r\nfunction AddVehicle() {\r\n    const history = useNavigate();\r\n    const [inputs, setInputs] = useState({\r\n        vin: \"\",\r\n        regNo: \"\",\r\n        make: \"\",\r\n        model: \"\",\r\n        year: \"\",\r\n        ownerName: \"\",\r\n        ownerNic: \"\",\r\n        ownerEmail: \"\",\r\n        ownerAddress: \"\",\r\n        contactNo: \"\",\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      let updatedValue = value;\r\n      let errorMessage = '';\r\n\r\n      if (name === 'vin' || name === 'regNo') {\r\n          // Validate VIN and RegNo for symbols other than numbers and letters\r\n          if (/[^a-zA-Z0-9\\s-]/.test(value)) {\r\n              errorMessage = `${name === 'vin' ? 'VIN' : 'Registration Number'} can only contain numbers, letters, spaces, and '-'`;\r\n              updatedValue = value.replace(/[^a-zA-Z0-9\\s-]/g, '');\r\n          }\r\n      }\r\n\r\n      setInputs(prevState => ({\r\n          ...prevState,\r\n          [name]: updatedValue,\r\n      }));\r\n\r\n      setErrors(prevErrors => ({\r\n          ...prevErrors,\r\n          [name]: errorMessage,\r\n      }));\r\n  };\r\n\r\n    \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const validationErrors = validate(inputs);\r\n        if (Object.keys(validationErrors).length === 0) {\r\n            console.log(inputs);\r\n            sendRequest().then(() => history('/vehicledetails'));\r\n        } else {\r\n            setErrors(validationErrors);\r\n        }\r\n    };\r\n\r\n    const validate = (values) => {\r\n        let errors = {};\r\n\r\n        // validation rules\r\n        if (!values.vin.trim()) {\r\n            errors.vin = \"VIN is required\";\r\n        }\r\n        if (!values.regNo.trim()) {\r\n            errors.regNo = \"Registration Number is required\";\r\n        }\r\n        if (!values.make.trim()) {\r\n          errors.make = \"Make is required\";\r\n        }\r\n        if (!values.model.trim()) {\r\n          errors.model = \"Model is required\";\r\n        }\r\n        if (!values.year.trim()) {\r\n          errors.year = \"Year is required\";\r\n        }\r\n        if (!values.ownerName.trim()) {\r\n          errors.ownerName = \"Owner Name is required\";\r\n        }\r\n        if (!values.ownerNic.trim()) {\r\n          errors.ownerNic = \"Owner NIC is required\";\r\n        }\r\n        if (!values.ownerEmail.trim()) {\r\n          errors.ownerEmail = \"Owner Email is required\";\r\n        }\r\n        if (!values.ownerAddress.trim()) {\r\n          errors.ownerAddress = \"Owner Address is required\";\r\n        }\r\n        if (!values.contactNo.trim()) {\r\n          errors.contactNo = \"Contact Number is required\";\r\n        }\r\n        \r\n        return errors;\r\n    };\r\n\r\n    const sendRequest = async () => {\r\n        await axios.post(\"http://localhost:8083/vehicles\", {\r\n            vin: String(inputs.vin),\r\n            regNo: String(inputs.regNo),\r\n            make: String(inputs.make),\r\n            model: String(inputs.model),\r\n            year: Number(inputs.year),\r\n            ownerName: String(inputs.ownerName),\r\n            ownerNic: Number(inputs.ownerNic),\r\n            ownerEmail: String(inputs.ownerEmail),\r\n            ownerAddress: String(inputs.ownerAddress),\r\n            contactNo: Number(inputs.contactNo),\r\n        }).then(res => res.data);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className='bg1-background'>\r\n            <VehicleNav />\r\n            <h1><center>Add Vehicle</center></h1>\r\n            <form className='addVehicle' onSubmit={handleSubmit}>\r\n                <div className='inputGroup'>\r\n                <label>Vehicle Identification Number(VIN)</label>\r\n                <input type=\"text\" pattern=\"[a-zA-Z0-9]{17}\" title='Enter 17 characters only. Space not Allowd' name=\"vin\" onChange={handleChange} value={inputs.vin} required></input>\r\n                {errors.vin && <span style={{ color: 'red' }}>{errors.vin}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Registration Number</label>\r\n                <input type=\"text\" pattern=\"[a-zA-Z0-9- ]{7}\" title='Enter 7 characters only.' name=\"regNo\" onChange={handleChange} value={inputs.regNo} required></input>\r\n                {errors.regNo && <span style={{ color: 'red' }}>{errors.regNo}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Make</label>\r\n                <input type=\"text\" pattern=\"[a-zA-Z ]+\" title='Numbers not Allowd' name=\"make\" onChange={handleChange} value={inputs.make} required></input>\r\n                {errors.make && <span style={{ color: 'red' }}>{errors.make}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Model</label>\r\n                <input type=\"text\" pattern=\"^[a-zA-Z][a-zA-Z0-9-_.]{5,12}$\" name=\"model\" onChange={handleChange} value={inputs.model} required></input>\r\n                {errors.model && <span style={{ color: 'red' }}>{errors.model}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Year</label>\r\n                <input type=\"text\"  pattern=\"[0-9]{4}\" title='Letters not Allowd' name=\"year\" onChange={handleChange} value={inputs.year} required></input>\r\n                {errors.year && <span style={{ color: 'red' }}>{errors.year}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Owner Name</label>\r\n                <br />\r\n                <input type=\"text\" pattern=\"[a-zA-Z ]+\" title='Numbers not Allowd' name=\"ownerName\" onChange={handleChange} value={inputs.ownerName} required></input>\r\n                {errors.ownerName && <span style={{ color: 'red' }}>{errors.ownerName}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Owner NIC</label>\r\n                <input type=\"text\" pattern=\"[0-9]{12}\" title='Letters not Allowd' name=\"ownerNic\" onChange={handleChange} value={inputs.ownerNic} required></input>\r\n                {errors.ownerNic && <span style={{ color: 'red' }}>{errors.ownerNic}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Owner Email</label>\r\n                <input type=\"email\" pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" title='Enter valid Email.' name=\"ownerEmail\" onChange={handleChange} value={inputs.ownerEmail} required></input>\r\n                {errors.ownerEmail && <span style={{ color: 'red' }}>{errors.ownerEmail}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Owner Address</label>\r\n                <input type=\"text\" pattern=\"[a-zA-Z0-9-, ]+\" name=\"ownerAddress\" onChange={handleChange} value={inputs.ownerAddress} required></input>\r\n                {errors.ownerAddress && <span style={{ color: 'red' }}>{errors.ownerAddress}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                <label>Contact Number</label>\r\n                <input type=\"text\"  name=\"contactNo\" onChange={handleChange} value={inputs.contactNo} required></input>\r\n                {errors.contactNo && <span style={{ color: 'red' }}>{errors.contactNo}</span>}\r\n                </div>\r\n\r\n                <div className='sButton'>\r\n                <button>Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddVehicle;*/\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../AddVehicle/AddVehicle.css';\r\nimport VehicleNav from '../VehicleNav/VehicleNav';\r\n\r\nfunction AddVehicle() {\r\n    const history = useNavigate();\r\n    const [inputs, setInputs] = useState({\r\n        vin: \"\",\r\n        regNo: \"\",\r\n        make: \"\",\r\n        model: \"\",\r\n        year: \"\",\r\n        ownerName: \"\",\r\n        ownerNic: \"\",\r\n        ownerEmail: \"\",\r\n        ownerAddress: \"\",\r\n        contactNo: \"\",\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        let updatedValue = value;\r\n        let errorMessage = '';\r\n\r\n        if (name === 'vin' || name === 'regNo') {\r\n            // Validate VIN and RegNo for symbols other than numbers and letters\r\n            if (/[^a-zA-Z0-9\\s-]/.test(value)) {\r\n                errorMessage = `${name === 'vin' ? 'VIN' : 'Registration Number'} can only contain numbers, letters, spaces, and '-'`;\r\n                updatedValue = value.replace(/[^a-zA-Z0-9\\s-]/g, '');\r\n            }\r\n        } else if (name === 'ownerNic') {\r\n            // Validate NIC for numbers and 'V' only, length 10 or 12\r\n            if (/[^0-9V]/.test(value) || /\\s/.test(value) || !(value.length === 10 || value.length === 12)) {\r\n                errorMessage = \"NIC can only contain numbers and 'V', and no spaces are allowed. Length should be 10 or 12 characters.\";\r\n                updatedValue = value.replace(/[^0-9V]/g, '').slice(0, 12);\r\n            }\r\n        } else if (name === 'ownerEmail') {\r\n            // Validate email for spaces, '@', and '.'\r\n            if (/\\s/.test(value)) {\r\n                errorMessage = \"Email cannot contain spaces.\";\r\n            } else if (!/@/.test(value) || !/\\./.test(value)) {\r\n                errorMessage = \"Email must contain '@' and '.'.\";\r\n            }\r\n        }\r\n\r\n        setInputs(prevState => ({\r\n            ...prevState,\r\n            [name]: updatedValue,\r\n        }));\r\n\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: errorMessage,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const validationErrors = validate(inputs);\r\n        if (Object.keys(validationErrors).length === 0) {\r\n            console.log(inputs);\r\n            sendRequest().then(() => history('/vehicledetails'));\r\n        } else {\r\n            setErrors(validationErrors);\r\n        }\r\n    };\r\n\r\n    const validate = (values) => {\r\n        let errors = {};\r\n\r\n        // validation rules\r\n        if (!values.vin.trim()) {\r\n            errors.vin = \"VIN is required\";\r\n        }\r\n        if (!values.regNo.trim()) {\r\n            errors.regNo = \"Registration Number is required\";\r\n        }\r\n        if (!values.make.trim()) {\r\n            errors.make = \"Make is required\";\r\n        }\r\n        if (!values.model.trim()) {\r\n            errors.model = \"Model is required\";\r\n        }\r\n        if (!values.year.trim()) {\r\n            errors.year = \"Year is required\";\r\n        }\r\n        if (!values.ownerName.trim()) {\r\n            errors.ownerName = \"Owner Name is required\";\r\n        }\r\n        if (!values.ownerNic.trim() || !(values.ownerNic.length === 10 || values.ownerNic.length === 12)) {\r\n            errors.ownerNic = \"Owner NIC is required and should be 10 or 12 characters long\";\r\n        }\r\n        if (!values.ownerEmail.trim()) {\r\n            errors.ownerEmail = \"Owner Email is required\";\r\n        }\r\n        if (!values.ownerAddress.trim()) {\r\n            errors.ownerAddress = \"Owner Address is required\";\r\n        }\r\n        if (!values.contactNo.trim()) {\r\n            errors.contactNo = \"Contact Number is required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const sendRequest = async () => {\r\n        await axios.post(\"http://localhost:8083/vehicles\", {\r\n            vin: String(inputs.vin),\r\n            regNo: String(inputs.regNo),\r\n            make: String(inputs.make),\r\n            model: String(inputs.model),\r\n            year: Number(inputs.year),\r\n            ownerName: String(inputs.ownerName),\r\n            ownerNic: String(inputs.ownerNic),\r\n            ownerEmail: String(inputs.ownerEmail),\r\n            ownerAddress: String(inputs.ownerAddress),\r\n            contactNo: String(inputs.contactNo),\r\n        }).then(res => res.data);\r\n    };\r\n\r\n    return (\r\n        <div className='bg1-background'>\r\n            <VehicleNav />\r\n            <h1><center>Add Vehicle</center></h1>\r\n            <form className='addVehicle' onSubmit={handleSubmit}>\r\n                <div className='inputGroup'>\r\n                    <label>Vehicle Identification Number (VIN)</label>\r\n                    <input type=\"text\" pattern=\"[a-zA-Z0-9]{17}\" title='Enter 17 characters only. Space not allowed' name=\"vin\" onChange={handleChange} value={inputs.vin} required></input>\r\n                    {errors.vin && <span style={{ color: 'red' }}>{errors.vin}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                    <label>Registration Number</label>\r\n                    <input type=\"text\" pattern=\"[a-zA-Z0-9\\s-]{7}\" title='Enter 7 characters only. Space and \"-\" allowed' name=\"regNo\" onChange={handleChange} value={inputs.regNo} required></input>\r\n                    {errors.regNo && <span style={{ color: 'red' }}>{errors.regNo}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                    <label>Make</label>\r\n                    <input type=\"text\" pattern=\"[a-zA-Z ]+\" title='Numbers not allowed' name=\"make\" onChange={handleChange} value={inputs.make} required></input>\r\n                    {errors.make && <span style={{ color: 'red' }}>{errors.make}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                    <label>Model</label>\r\n                    <input type=\"text\" pattern=\"^[a-zA-Z][a-zA-Z0-9-_.]{5,12}$\" name=\"model\" onChange={handleChange} value={inputs.model} required></input>\r\n                    {errors.model && <span style={{ color: 'red' }}>{errors.model}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                    <label>Year</label>\r\n                    <input type=\"text\" pattern=\"[0-9]{4}\" title='Letters not allowed' name=\"year\" onChange={handleChange} value={inputs.year} required></input>\r\n                    {errors.year && <span style={{ color: 'red' }}>{errors.year}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                    <label>Owner Name</label>\r\n                    <input type=\"text\" pattern=\"[a-zA-Z ]+\" title='Numbers not allowed' name=\"ownerName\" onChange={handleChange} value={inputs.ownerName} required></input>\r\n                    {errors.ownerName && <span style={{ color: 'red' }}>{errors.ownerName}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                    <label>Owner NIC</label>\r\n                    <input type=\"text\" pattern=\"[0-9V]{10,12}\" title='Enter 10 or 12 characters. Only numbers and capital \"V\" allowed.' name=\"ownerNic\" onChange={handleChange} value={inputs.ownerNic} required></input>\r\n                    {errors.ownerNic && <span style={{ color: 'red' }}>{errors.ownerNic}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                    <label>Owner Email</label>\r\n                    <input type=\"email\" title='Enter valid Email.' name=\"ownerEmail\" onChange={handleChange} value={inputs.ownerEmail} required></input>\r\n                    {errors.ownerEmail && <span style={{ color: 'red' }}>{errors.ownerEmail}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                    <label>Owner Address</label>\r\n                    <input type=\"text\" pattern=\"[a-zA-Z0-9-, ]+\" name=\"ownerAddress\" onChange={handleChange} value={inputs.ownerAddress} required></input>\r\n                    {errors.ownerAddress && <span style={{ color: 'red' }}>{errors.ownerAddress}</span>}\r\n                </div>\r\n                <div className='inputGroup'>\r\n                    <label>Contact Number</label>\r\n                    <input type=\"text\" pattern=\"[0-9]{10}\" title='Enter valid contact number' name=\"contactNo\" onChange={handleChange} value={inputs.contactNo} required></input>\r\n                    {errors.contactNo && <span style={{ color: 'red' }}>{errors.contactNo}</span>}\r\n                </div>\r\n\r\n                <div className='sButton'>\r\n                    <button>Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddVehicle;\r\n\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}