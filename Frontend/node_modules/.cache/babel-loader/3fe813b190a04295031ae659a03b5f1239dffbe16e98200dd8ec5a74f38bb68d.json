{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\ITP\\\\ITP-project\\\\ITP-project\\\\FRONTEND\\\\src\\\\Components\\\\MonthlyCost\\\\CostByMonth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './CostByMonth.css';\nimport Nav from '../Nav/Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CostByMonth = () => {\n  _s();\n  const [monthlyExpenses, setMonthlyExpenses] = useState([]);\n  useEffect(() => {\n    fetchMonthlyExpenses();\n  }, []);\n  const fetchMonthlyExpenses = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/total-cost-by-month'); // Endpoint to fetch total cost by month\n      setMonthlyExpenses(response.data);\n    } catch (error) {\n      console.error('Error fetching monthly expenses:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cost-by-month-container\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monthly Service Cost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: monthlyExpenses.map((expense, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: getMonthName(expense._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: expense.totalCost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to get month name from month number\n_s(CostByMonth, \"nSxuaJKhri1MFKaF6c34JMYvpSs=\");\n_c = CostByMonth;\nconst getMonthName = monthNumber => {\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  return months[monthNumber - 1];\n};\nexport default CostByMonth;\nvar _c;\n$RefreshReg$(_c, \"CostByMonth\");","map":{"version":3,"names":["React","useState","useEffect","axios","Nav","jsxDEV","_jsxDEV","CostByMonth","_s","monthlyExpenses","setMonthlyExpenses","fetchMonthlyExpenses","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","expense","index","getMonthName","_id","totalCost","_c","monthNumber","months","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/ITP/ITP-project/ITP-project/FRONTEND/src/Components/MonthlyCost/CostByMonth.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './CostByMonth.css';\r\nimport Nav from '../Nav/Nav';\r\n\r\nconst CostByMonth = () => {\r\n  const [monthlyExpenses, setMonthlyExpenses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchMonthlyExpenses();\r\n  }, []);\r\n\r\n  const fetchMonthlyExpenses = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/total-cost-by-month'); // Endpoint to fetch total cost by month\r\n      setMonthlyExpenses(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching monthly expenses:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cost-by-month-container\">\r\n        <Nav />\r\n      <h2>Monthly Service Cost</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Month</th>\r\n            <th>Total Cost</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {monthlyExpenses.map((expense, index) => (\r\n            <tr key={index}>\r\n              <td>{getMonthName(expense._id)}</td>\r\n              <td>{expense.totalCost}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Helper function to get month name from month number\r\nconst getMonthName = (monthNumber) => {\r\n  const months = [\r\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n  return months[monthNumber - 1];\r\n};\r\n\r\nexport default CostByMonth;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAC1B,OAAOC,GAAG,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACdS,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,2CAA2C,CAAC,CAAC,CAAC;MAC/EH,kBAAkB,CAACE,QAAQ,CAACE,IAAI,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,oBACET,OAAA;IAAKW,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACpCZ,OAAA,CAACF,GAAG;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACThB,OAAA;MAAAY,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BhB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,eACEZ,OAAA;UAAAY,QAAA,gBACEZ,OAAA;YAAAY,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdhB,OAAA;YAAAY,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRhB,OAAA;QAAAY,QAAA,EACGT,eAAe,CAACc,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAClCnB,OAAA;UAAAY,QAAA,gBACEZ,OAAA;YAAAY,QAAA,EAAKQ,YAAY,CAACF,OAAO,CAACG,GAAG;UAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpChB,OAAA;YAAAY,QAAA,EAAKM,OAAO,CAACI;UAAS;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAFrBG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;;AAED;AAAAd,EAAA,CAxCMD,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAyCjB,MAAMmB,YAAY,GAAII,WAAW,IAAK;EACpC,MAAMC,MAAM,GAAG,CACb,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACtD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CACjE;EACD,OAAOA,MAAM,CAACD,WAAW,GAAG,CAAC,CAAC;AAChC,CAAC;AAED,eAAevB,WAAW;AAAC,IAAAsB,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}